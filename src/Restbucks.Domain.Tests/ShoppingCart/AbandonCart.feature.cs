// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.6.1.0
//      SpecFlow Generator Version:1.6.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Restbucks.ShoppingCart
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.6.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Abandon shopping cart")]
    public partial class AbandonShoppingCartFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AbandonCart.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Abandon shopping cart", "In order to make it to work on time\r\nAs a habitually-late employee\r\nI want to wal" +
                    "k away before placing my order", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Abandon shopping cart")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AbandonShoppingCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Abandon shopping cart", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("the franchise owner has set up the menu");
#line 9
 testRunner.And("I have created a cart");
#line 10
 testRunner.When("I abandon the cart");
#line 11
 testRunner.Then("the cart is abandoned");
#line 12
 testRunner.And("nothing else happens");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Abandon shopping cart after placing order")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AbandonShoppingCartAfterPlacingOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Abandon shopping cart after placing order", new string[] {
                        "domain"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("the franchise owner has set up the menu");
#line 17
 testRunner.And("I have placed an order");
#line 18
 testRunner.When("I abandon the cart");
#line 19
 testRunner.Then("the aggregate state is invalid");
#line 20
 testRunner.And("the error is \"You\'ve already placed the order. You can\'t abandon your shopping ca" +
                    "rt.\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Abandon an already abandoned cart")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AbandonAnAlreadyAbandonedCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Abandon an already abandoned cart", new string[] {
                        "domain"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("the franchise owner has set up the menu");
#line 25
 testRunner.And("I have created a cart");
#line 26
 testRunner.And("I have abandoned the cart");
#line 27
 testRunner.When("I abandon the cart");
#line 28
 testRunner.Then("nothing happens");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
