// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Restbucks.ShoppingCart
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create an order")]
    public partial class CreateAnOrderFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateAnOrder.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create an order", "In order to avoid a murderous rampage\r\nAs a coffee addict\r\nI want to order coffee" +
                    "", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a cappucino to a new order")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AddACappucinoToANewOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a cappucino to a new order", new string[] {
                        "domain"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("the franchise owner has set up the menu");
#line 9
 testRunner.When("I add a medium cappuccino, skim milk, single shot");
#line 10
 testRunner.Then("the cart is created");
#line 11
 testRunner.And("a medium cappuccino, skim milk, single shot is added to the cart");
#line 12
 testRunner.And("nothing else happens");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add another item to an order")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AddAnotherItemToAnOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add another item to an order", new string[] {
                        "domain"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("the franchise owner has set up the menu");
#line 17
 testRunner.And("I have created a cart");
#line 18
 testRunner.And("I have added a medium cappuccino, skim milk, single shot");
#line 19
 testRunner.When("I add a large hot chocolate, skim milk, no whipped cream");
#line 20
 testRunner.Then("a large hot chocolate, skim milk, no whipped cream is added to the cart");
#line 21
 testRunner.And("nothing else happens");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a third item to an order")]
        [NUnit.Framework.CategoryAttribute("domain")]
        public virtual void AddAThirdItemToAnOrder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a third item to an order", new string[] {
                        "domain"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("the franchise owner has set up the menu");
#line 26
 testRunner.And("I have created a cart");
#line 27
 testRunner.And("I have added a medium cappuccino, skim milk, single shot");
#line 28
 testRunner.And("I have added a medium cappuccino, skim milk, single shot");
#line 29
 testRunner.When("I add a large hot chocolate, skim milk, no whipped cream");
#line 30
 testRunner.Then("a large hot chocolate, skim milk, no whipped cream is added to the cart");
#line 31
 testRunner.And("nothing else happens");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
